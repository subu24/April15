package com;

class Node{
	int data;
	Node next;
	
	Node(int data){
		this.data=data;
		next=null;
	}
}


public class LinkedList {
	
	 Node head;
	
	 Node detectLoop(){
		
		Node slow=head;
		Node fast=head;
		boolean loop=false;
		while(fast!=null && fast.next!=null){
			fast=fast.next.next;
			slow=slow.next;
			if(fast==slow){
				loop=true;
				break;
			}	
		}
		
		if(loop){
			slow=head;
			while(fast!=slow){
				fast=fast.next;
				slow=slow.next;
			}
			return fast;
		}else
		
		return null;
	}
	 
	 Node ReverseList(){
		 
		 Node current=head;
		 Node prev=null;
		 while(current!=null){
			 Node next=current.next;
			 current.next=prev;
			 prev=current;
			 current=next;
		 }
		 return prev;
	 }
	 
	 Node prev=null;
	 Node RecReverseList(Node node){
		 
		 if(node==null)
			 return null;
		 else{
			 
			 Node trav=RecReverseList(node.next);
			 node.next=trav;	 
			trav=node;
		 }
		 return prev;
	 }
	 
	 
	 
	 void push(int data){
		 Node node=new Node(data);
		 node.next=head;
		 head=node;
	 }
	void display(Node node){
		while(node!=null){
			System.out.println(node.data);
			node=node.next;
		}
	}

	public static void main(String[] args) {

		LinkedList list=new LinkedList();
		list.push(20);
		list.push(4);
		list.push(15);
		list.push(10);
		list.push(50);
		//list.head.next.next.next=list.head.next;
		list.display(list.head);
		Node node=list.RecReverseList(list.head);
	    list.display(node);
	}

}
